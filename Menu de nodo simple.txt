package Noodos;

import java.util.Scanner;

public class NewClass {

    static void dump(String msg, Node topNode) {
        System.out.print(msg + " ");

        while (topNode != null) {
            System.out.print(topNode.name + " ");
            topNode = topNode.next;
        }
        System.out.println();
    }

    static class Node {
        String name;
        Node next;
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
         Scanner rd = new Scanner(System.in);
        Node top = null;
        int opt = 0;

        do {
            System.out.println("1 - Agregar Nodo Inicial \n"
                    + "2 - Agregar Nodo Atras de Inicial\n"
                    + "3 - Agregart Nodo Adelante de Inicial\n"
                    + "4 - Agregar Nodo Intermedio\n"
                    + "5 - Mostrar Nodos\n"
                    + "6 - salir\n");
            switch (opt = sc.nextInt()) {
                case 1:
                    top = new Node();
                    System.out.println("ingresa contenido de nodo incial");
                    top.name = rd.nextLine();
                    top.next = null;
                    dump("Case 1", top);
                    
                    break;
                case 2:
                    Node temp;

                    temp = new Node();
                    System.out.println("ingresa contenido de nodo anterior a inicial");
                    temp.name = rd.nextLine();
                    temp.next = top;
                    top = temp;
                    dump("Case 2", top);
                  

                    break;
                case 3:
                    temp = new Node();
                    System.out.println("ingresa contenido de nodo posterior a inicial");
                    temp.name = rd.nextLine();
                    temp.next = null;

                    Node temp2;

                    temp2 = top;

                    while (temp2.next != null) {
                        temp2 = temp2.next;
                    }

                    temp2.next = temp;
                    dump("Case 3", top);
                  

                    break;
                case 4:
                    temp = new Node();
        System.out.println("ingresa contenido de nodo intermedio");
        temp.name = rd.nextLine();

        temp2 = top;

        while (temp2.name.equals(top.name) == false) {
            temp2 = temp2.next;
        }

        temp.next = temp2.next;
        temp2.next = temp;
        dump("Case 4", top);
       
               
                    break;
                case 5:
                    dump("Contenido de Nodos", top);
                    break;
                case 6:

            }

        } while (opt
                != 6);

    }
    
}
